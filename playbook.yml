---
- name: This is a hello-world example
  hosts: all
  become: yes
  vars: 
    redis_port: 6379
    redis_main_ip: 192.168.56.10
    sentinel_replicaset_name: redis_replica
  
  tasks:

    #
    # Installing
    #
    - name: Install the latest version of epel-release
      ansible.builtin.yum:
        update_cache: yes
        name: epel-release
        state: latest

    - name: Install the latest version of Redis
      ansible.builtin.yum:
        name: redis
        state: latest

    - name:  Make sure a service redis is stopped
      ansible.builtin.systemd:
        state: stopped
        name: redis

    - name:  Make sure a service sentinel is stopped
      ansible.builtin.systemd:
        state: stopped
        name: redis-sentinel

    #
    # Config redis
    #
    - name: "Redis: ensure protected-mode is set to: no"
      ansible.builtin.lineinfile:
        path: /etc/redis.conf
        regexp: '^protected-mode'
        line: "protected-mode no"
        state: present

    - name: "Redis: ensure bind is set to: 0.0.0.0"
      ansible.builtin.lineinfile:
        path: /etc/redis.conf
        regexp: '^bind'
        line: "bind 0.0.0.0"
        state: present

    - name: "Redis: ensure port is set to: {{ redis_port }}"
      ansible.builtin.lineinfile:
        path: /etc/redis.conf
        regexp: '^port'
        line: "port {{ redis_port }}"
        state: present
    
    - name: "Redis: ensure that on the replica servers, slaveof is set to redis_main {{ redis_main_ip }} {{ redis_port }}"
      ansible.builtin.lineinfile:
        path: /etc/redis.conf
        regexp: '^slaveof'
        line: "slaveof {{ redis_main_ip }} {{ redis_port }}"
        #insertafter: "slaveof {{ redis_main_ip }} {{ redis_port }}"
        state: present
      when: inventory_hostname in groups["redis_replica"]

    #
    # Config sentinel
    #
    - name: "Sentinel: ensure protected-mode is set to: no"
      ansible.builtin.lineinfile:
        path: /etc/redis-sentinel.conf
        regexp: '^protected-mode'
        line: "protected-mode no"
        state: present

    - name: "Sentinel: ensure sentinel monitor is set to: {{ sentinel_replicaset_name }} {{ redis_main_ip }} {{ redis_port }} 2"
      ansible.builtin.lineinfile:
        path: /etc/redis-sentinel.conf
        regexp: '^sentinel monitor'
        line: "sentinel monitor {{ sentinel_replicaset_name }} {{ redis_main_ip }} {{ redis_port }} 2"
        state: present

    - name: "Sentinel: ensure sentinel down-after-milliseconds is set to: {{ sentinel_replicaset_name }} 5000"
      ansible.builtin.lineinfile:
        path: /etc/redis-sentinel.conf
        regexp: '^sentinel down-after-milliseconds'
        line: "sentinel down-after-milliseconds {{ sentinel_replicaset_name }} 5000"
        state: present

    - name: "Sentinel: ensure sentinel failover-timeout is set to: {{ sentinel_replicaset_name }} 5000"
      ansible.builtin.lineinfile:
        path: /etc/redis-sentinel.conf
        regexp: '^sentinel failover-timeout'
        line: "sentinel failover-timeout {{ sentinel_replicaset_name }} 5000"
        state: present

    - name: "Sentinel: ensure sentinel parallel-syncs is set to: {{ sentinel_replicaset_name }} 1"
      ansible.builtin.lineinfile:
        path: /etc/redis-sentinel.conf
        regexp: '^sentinel parallel-syncs'
        line: "sentinel parallel-syncs {{ sentinel_replicaset_name }} 1"
        state: present

    - name: "Sentinel: ensure sentinel config-epoch is set to: {{ sentinel_replicaset_name }} 0"
      ansible.builtin.lineinfile:
        path: /etc/redis-sentinel.conf
        regexp: '^sentinel config-epoch'
        line: "sentinel config-epoch {{ sentinel_replicaset_name }} 0"
        state: present

    - name: "Sentinel: ensure sentinel leader-epoch is set to: {{ sentinel_replicaset_name }} 0"
      ansible.builtin.lineinfile:
        path: /etc/redis-sentinel.conf
        regexp: '^sentinel leader-epoch'
        line: "sentinel leader-epoch {{ sentinel_replicaset_name }} 0"
        state: present

    #
    # Restarting
    #
    - name: Make sure a service redis is running
      ansible.builtin.systemd:
        state: started
        enabled: yes
        name: redis

    - name: Make sure a service sentinel is running
      ansible.builtin.systemd:
        state: started
        enabled: yes
        name: redis-sentinel
